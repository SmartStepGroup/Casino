// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Игра в кубик")]
    public partial class ИграВКубикFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Dice.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Игра в кубик", "   Как человек, который нуждается в денежных средствах\r\n   Я хочу играть в казино" +
                    "\r\n   И кидать кубик", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Игрок выигрывает")]
        public virtual void ИгрокВыигрывает()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Игрок выигрывает", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("у Игрока есть некоторое количество фишек", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 8
 testRunner.And("Игрок имеет ставку в размере всех его фишек", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
 testRunner.When("на Кубике выпадет тоже число, что и у Игрока в ставке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 10
 testRunner.Then("Игрок выиграет в 6 раз больше, чем было у него в ставке", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Игрок проигрывает")]
        public virtual void ИгрокПроигрывает()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Игрок проигрывает", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("у Игрока есть некоторое количество фишек", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 15
 testRunner.And("Игрок имеет ставку в размере всех его фишек", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
 testRunner.When("на Кубике выпадет другое число, отличное от числа в ставке Игрока", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 17
 testRunner.Then("Игрок потеряет ставку и все свои фишки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
